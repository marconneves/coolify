name: production-release

on:
  release:
    types: [released]

jobs:
  amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get current package version
        uses: martinbeentjes/npm-get-version-action@v1.2.3
        id: package-version
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: themarkwill/coolify:${{steps.package-version.outputs.current-version}}-amd64
          cache-from: type=registry,ref=themarkwill/coolify:buildcache-amd64
          cache-to: type=registry,ref=themarkwill/coolify:buildcache-amd64,mode=max
  merge-manifest:
    runs-on: ubuntu-latest
    needs: [amd64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get current package version
        uses: martinbeentjes/npm-get-version-action@v1.2.3
        id: package-version
      - name: Create & publish manifest
        run: |
          docker manifest create themarkwill/coolify:${{steps.package-version.outputs.current-version}} --amend themarkwill/coolify:${{steps.package-version.outputs.current-version}}-amd64
          docker manifest push themarkwill/coolify:${{steps.package-version.outputs.current-version}}
      - uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_PROD_RELEASE_CHANNEL }}
